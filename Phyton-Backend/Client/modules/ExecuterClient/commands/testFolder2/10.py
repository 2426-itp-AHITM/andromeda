import os\nimport subprocess\nimport json\nfrom pathlib import Path\n\nCACHE_FILE = \"file_cache.json\"\nSPECIAL_FOLDERS = {\n    \"desktop\": str(Path.home() / \"Desktop\"),\n    \"downloads\": str(Path.home() / \"Downloads\"),\n    \"dokumente\": str(Path.home() / \"Documents\"),\n    \"bilder\": str(Path.home() / \"Pictures\"),\n    \"musik\": str(Path.home() / \"Music\"),\n    \"videos\": str(Path.home() / \"Videos\"),\n    \"papierkorb\": \"shell:RecycleBinFolder\"\n}\n\nclass findFileOrFolder:\n    def __init__(self):\n        self.cache = self.load_cache()\n\n    def load_cache(self):\n        if os.path.exists(CACHE_FILE):\n            with open(CACHE_FILE, \"r\") as f:\n                return json.load(f)\n        return {}\n\n    def save_cache(self):\n        with open(CACHE_FILE, \"w\") as f:\n            json.dump(self.cache, f)\n\n    def run(self, params):\n        name = params[0]\n        if name.lower() in self.cache:\n            path = self.cache[name.lower()]\n            if os.path.exists(path) or path.startswith(\"shell:\\"):\n                subprocess.run([\"explorer\", \"/select,\", path])\n                print(f\"Opened from cache: {path}\")\n                return\n            else:\n                del self.cache[name.lower()]  # Remove invalid path\n                self.save_cache()\n\n        # Check special folders\n        if name.lower() in SPECIAL_FOLDERS:\n            path = SPECIAL_FOLDERS[name]\n            subprocess.run([\"explorer\", path])\n            print(f\"Opened special folder: {path}\")\n            return\n\n        search_path = \"C:\\\\\"  # Change this to the root directory you want to search in\n\n        for root, dirs, files in os.walk(search_path):\n            if \"Recent\" in root:\n                continue\n\n            if name in dirs:\n                folder_path = os.path.join(root, name)\n                self.cache[name] = folder_path\n                self.save_cache()\n                subprocess.run([\"explorer\", folder_path])\n                print(f\"Opened folder: {folder_path}\")\n                return\n            for file in files:\n                if name in file:\n                    file_path = os.path.join(root, file)\n                    self.cache[name.lower()] = file_path\n                    self.save_cache()\n                    subprocess.run([\"explorer\", \"/select,\", file_path])\n                    print(f\"Opened file location: {file_path}\")\n                    return\n\n        print(\"File or folder not found.\")\n\nif __name__ == \"__main__\":\n    name = input(\"Enter the file or folder name to search: \" )\n    opener = findFileOrFolder()\n    opener.run([name])\n